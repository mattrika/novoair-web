@use 'node_modules/@ngneat/hot-toast/src/styles/styles.scss';

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
// https://indepth.dev/tutorials/angular/angular-material-theming-system-complete-guide
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$my-palette: (
    50: #f3fcff,
    100: #eef7ff,
    200: #e9f2ff,
    300: #dfe8f4,
    400: #bdc5d2,
    500: #9fa7b3,
    600: #757d89,
    700: #616974,
    800: #424954,
    900: #202831,
    contrast: (
        50: rgba(black, 0.87),
        100: rgba(black, 0.87),
        200: rgba(black, 0.87),
        300: white,
        400: white,
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
    ),
);

$my-accent-palette: (
    50: #fbefdd,
    100: #e9d6c2,
    200: #d4bca4,
    300: #bca184,
    400: #a98b69,
    500: #97764f,
    600: #8a6b48,
    700: #7a5d3e,
    800: #6d4f35,
    900: #5d402a,
    contrast: (
        50: rgba(black, 0.87),
        100: rgba(black, 0.87),
        200: rgba(black, 0.87),
        300: rgba(black, 0.87),
        400: white,
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
    ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
// https://github.com/angular/components/blob/main/src/material/core/theming/_palette.scss
$app-primary: mat.define-palette($my-palette);
$app-accent: mat.define-palette($my-accent-palette);

// The warn palette is optional (defaults to red).
$app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$app-theme: mat.define-light-theme(
    (
        color: (
            primary: $app-primary,
            accent: $app-accent,
            warn: $app-warn,
        ),
        density: -2,
    )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($app-theme);

@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

:root {
    --my-primary: #616974;
    --my-accent: #bca184;
    --swiper-theme-color: #616974;
    --swiper-navigation-size: 20px;
    --spinner-color: #d4bca4;
}

html,
body {
    height: 100%;
    margin: 0;
    font-family: 'IBM Plex Sans', sans-serif;
}

@import 'app-spinner';

.page-container {
    @apply container mx-auto max-w-screen-2xl px-4 pb-16 2xl:px-0;
}
